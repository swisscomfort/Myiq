#!/usr/bin/env bash
# Create a GitHub Release with the standalone scanner
# Requires: gh CLI tool (GitHub CLI)
set -euo pipefail

VERSION="${1:-v1.0.0}"

echo "========================================="
echo "Creating GitHub Release: $VERSION"
echo "========================================="
echo ""

# Check if gh CLI is installed
if ! command -v gh >/dev/null 2>&1; then
    echo "ERROR: GitHub CLI (gh) not installed"
    echo ""
    echo "Install it with:"
    echo "  Debian/Ubuntu: sudo apt install gh"
    echo "  Fedora:        sudo dnf install gh"
    echo "  Or:            https://cli.github.com/"
    exit 1
fi

# Check if authenticated
if ! gh auth status >/dev/null 2>&1; then
    echo "ERROR: Not authenticated with GitHub"
    echo "Run: gh auth login"
    exit 1
fi

# Build if needed
if [ ! -f "crypto-scanner-linux-x64.tar.gz" ]; then
    echo "Building standalone scanner..."
    make build-standalone
    tar czf crypto-scanner-linux-x64.tar.gz -C dist crypto-scanner README.txt
fi

echo "✓ Build ready: crypto-scanner-linux-x64.tar.gz"
echo "  Size: $(du -h crypto-scanner-linux-x64.tar.gz | cut -f1)"
echo ""

# Create release
echo "Creating GitHub Release..."

gh release create "$VERSION" \
    crypto-scanner-linux-x64.tar.gz \
    --title "Crypto Scanner $VERSION - Portable Linux Build" \
    --notes "## Crypto Scanner - Standalone Executable

### Download
- **crypto-scanner-linux-x64.tar.gz** (7.7 MB) - Linux x86_64 portable scanner

### What's included
- Standalone executable (no Python installation needed)
- Complete documentation (README.txt)
- All scanning features (pattern matching, masking, SHA-256)

### Quick Start
\`\`\`bash
# Extract
tar xzf crypto-scanner-linux-x64.tar.gz

# Make executable
chmod +x crypto-scanner

# Run scan
./crypto-scanner --root /path/to/scan --outdir ./output
\`\`\`

### Requirements
- Linux x86_64 (Ubuntu, Debian, Fedora, etc.)
- No Python installation needed
- No additional dependencies

### Performance
- ~600 files per second
- Automatic sensitive data masking
- Read-only scanning
- SHA-256 integrity hashing

### Features
✓ Bitcoin, Ethereum, and multi-coin wallet detection
✓ Keystore and seed phrase recognition
✓ Private key detection with automatic masking
✓ JSON and CSV output formats
✓ Offline operation (no network required)
✓ GDPR/DSGVO compliant

### Documentation
See the full documentation at: https://github.com/swisscomfort/Myiq

### Platform Support
This build is for **Linux x86_64** only.
For other platforms:
- Windows: Build on Windows system with PyInstaller
- macOS: Build on macOS system with PyInstaller

### Build Information
- Python: 3.13.9 (embedded)
- PyInstaller: 6.16.0
- Platform: Linux x86_64
- Build Date: $(date +%Y-%m-%d)

---
Generated by [Crypto Recovery Toolkit](https://github.com/swisscomfort/Myiq)"

echo ""
echo "========================================="
echo "✓ Release created successfully!"
echo "========================================="
echo ""
echo "View release:"
echo "  gh release view $VERSION"
echo ""
echo "Or visit:"
echo "  https://github.com/swisscomfort/Myiq/releases"
echo ""
